apiVersion: testsys.system/v1
kind: Test
metadata:
  name: ${CLUSTER_NAME}-test-1-initial
  namespace: testsys
spec:
  agent:
    name: sonobuoy-test-agent
    image: ${SONOBUOY_TEST_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      assumeRole: ${ASSUME_ROLE}
      kubeconfigBase64: \${${CLUSTER_NAME}.encodedKubeconfig}
      plugin: "e2e"
      mode: "quick"
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: []
  resources: [${CLUSTER_NAME}-vms, ${CLUSTER_NAME}]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: ${CLUSTER_NAME}-test-2-migrate
  namespace: testsys
spec:
  agent:
    configuration:
      awsRegion: ${REGION}
      instanceIds: \${${CLUSTER_NAME}-vms.ids}
      migrateToVersion: ${UPGRADE_VERSION}
      tufRepo:
        metadataUrl: ${METADATA_URL}
        targetsUrl: ${TARGETS_URL}
      assumeRole: ${ASSUME_ROLE}
    secrets:
      vsphereCredentials: vsphere-creds
    image: ${MIGRATION_TEST_AGENT_IMAGE_URI}
    name: migration-test-agent
    keepRunning: true
  resources: [${CLUSTER_NAME}-vms, ${CLUSTER_NAME}]
  dependsOn: [${CLUSTER_NAME}-test-1-initial]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: ${CLUSTER_NAME}-test-3-migrated
  namespace: testsys
spec:
  agent:
    name: sonobuoy-test-agent
    image: ${SONOBUOY_TEST_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      assumeRole: ${ASSUME_ROLE}
      kubeconfigBase64: \${${CLUSTER_NAME}.encodedKubeconfig}
      plugin: "e2e"
      mode: "quick"
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: [${CLUSTER_NAME}-test-2-migrate]
  resources: [${CLUSTER_NAME}-vms, ${CLUSTER_NAME}]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: ${CLUSTER_NAME}-test-4-migrate
  namespace: testsys
spec:
  agent:
    configuration:
      awsRegion: ${REGION}
      instanceIds: \${${CLUSTER_NAME}-vms.ids}
      migrateToVersion: ${STARTING_VERSION}
      tufRepo:
        metadataUrl: ${METADATA_URL}
        targetsUrl: ${TARGETS_URL}
      assumeRole: ${ASSUME_ROLE}
    secrets:
      vsphereCredentials: vsphere-creds
    image: ${MIGRATION_TEST_AGENT_IMAGE_URI}
    name: migration-test-agent
    keepRunning: true
  resources: [${CLUSTER_NAME}-vms, ${CLUSTER_NAME}]
  dependsOn: [${CLUSTER_NAME}-test-3-migrated]
---
apiVersion: testsys.system/v1
kind: Test
metadata:
  name: ${CLUSTER_NAME}-test-5-final
  namespace: testsys
spec:
  agent:
    name: sonobuoy-test-agent
    image: ${SONOBUOY_TEST_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      assumeRole: ${ASSUME_ROLE}
      kubeconfigBase64: \${${CLUSTER_NAME}.encodedKubeconfig}
      plugin: "e2e"
      mode: "quick"
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: [${CLUSTER_NAME}-test-4-migrate]
  resources: [${CLUSTER_NAME}-vms, ${CLUSTER_NAME}]
---
apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: ${CLUSTER_NAME}
  namespace: testsys
spec:
  agent:
    name: agent
    image: ${VSPHERE_K8S_CLUSTER_RESOURCE_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      controlPlaneEndpointIp: ${CONTROL_PLANE_ENDPOINT_IP}
      creationPolicy: ifNotExists
      mgmtClusterKubeconfigBase64: ${MGMT_CLUSTER_KUBECONFIG_BASE64}
      name: ${CLUSTER_NAME}
      ovaName: ${OVA_NAME}
      tufRepo:
        metadataUrl: ${METADATA_URL}
        targetsUrl: ${TARGETS_URL}
      version: ${K8S_VERSION}
      vcenterDatacenter: ${VCENTER_DATACENTER}
      vcenterDatastore: ${VCENTER_DATASTORE}
      vcenterHostUrl: ${VCENTER_HOST_URL}
      vcenterNetwork: ${VCENTER_NETWORK}
      vcenterResourcePool: ${VCENTER_RESOURCE_POOL}
      vcenterWorkloadFolder: ${VCENTER_WORKLOAD_FOLDER}
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: []
  destructionPolicy: onDeletion
---
apiVersion: testsys.system/v1
kind: Resource
metadata:
  name: ${CLUSTER_NAME}-vms
  namespace: testsys
spec:
  agent:
    name: agent
    image: ${VSPHERE_VM_RESOURCE_AGENT_IMAGE_URI}
    keepRunning: true
    configuration:
      assumeRole: ${ASSUME_ROLE}
      cluster:
        controlPlaneEndpointIp: "\${${CLUSTER_NAME}.endpoint}"
        kubeconfigBase64: "\${${CLUSTER_NAME}.encodedKubeconfig}"
        name: "\${${CLUSTER_NAME}.clusterName}"
      ovaName: ${OVA_NAME}
      tufRepo:
        metadataUrl: ${METADATA_URL}
        targetsUrl: ${TARGETS_URL}
      vcenterDatacenter: ${VCENTER_DATACENTER}
      vcenterDatastore: ${VCENTER_DATASTORE}
      vcenterHostUrl: ${VCENTER_HOST_URL}
      vcenterNetwork: ${VCENTER_NETWORK}
      vcenterResourcePool: ${VCENTER_RESOURCE_POOL}
      vcenterWorkloadFolder: ${VCENTER_WORKLOAD_FOLDER}
      vmCount: 2
    secrets:
      vsphereCredentials: vsphere-creds
  dependsOn: [${CLUSTER_NAME}]
  destructionPolicy: onDeletion
